# Prefix: Languagesystems
# automatic
languagesystem DFLT dflt;
languagesystem latn dflt;
languagesystem latn CAT;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn CRT;
languagesystem latn AZE;

# automatic
@Uppercase = [ A A.alt Aacute Abreve Acircumflex Acircumflexhookabove Adieresis Agrave Amacron Aogonek Aring Atilde AE B C Cacute Ccaron Ccedilla Cdotaccent D Eth Dcaron Dcroat E Eacute Ecaron Ecircumflex Edieresis Edotaccent Egrave Emacron Eogonek F G Gbreve Gcommaaccent Gdotaccent H Hbar I Iacute Icircumflex Idieresis Idotaccent Igrave Imacron Iogonek J K Kcommaaccent L Lacute Lcaron Lcommaaccent Ldot Lslash M N Nacute Ncaron Ncommaaccent Eng Ntilde O Oacute Ocircumflex Odieresis Ograve Ohungarumlaut Omacron Oslash Otilde OE P Thorn Q Q.swsh R R.swsh Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scommaaccent Germandbls T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ucircumflex Udieresis Ugrave Uhungarumlaut Umacron Uogonek Uring V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ygrave Z Zacute Zcaron Zdotaccent Delta Omega ];

@DevaIMatras = [  ];

feature aalt {
# automatic
feature ccmp;
feature locl;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature swsh;
feature ss01;
feature ss02;
feature ss03;
feature ss04;
feature ss05;
feature ss06;
feature ss07;
feature ss08;
feature mgrk;
feature zero;
} aalt;

feature ccmp {
# automatic
lookup latn_comb1 {
	script latn;
@CombiningTopAccents = [acutecomb brevecomb caroncomb circumflexcomb commaturnedabovecomb dieresiscomb dotaccentcomb gravecomb hookabovecomb hungarumlautcomb macroncomb ringcomb tildecomb];
@CombiningNonTopAccents = [cedillacomb ogonekcomb slashlongcomb slashshortcomb strokeshortcomb];
	sub [i j]' @CombiningTopAccents by [idotless jdotless];
	sub [i j]' @CombiningNonTopAccents @CombiningTopAccents by [idotless jdotless];
} latn_comb1;
} ccmp;

feature locl {
# automatic
script latn;
language CAT;
sub  l' periodcentered' l by ldot;
sub  L' periodcentered' L by Ldot;
language ROM;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language MOL;
sub Scedilla by Scommaaccent;
sub scedilla by scommaaccent;
sub Tcedilla by Tcommaaccent;
sub tcedilla by tcommaaccent;
language KAZ;
sub i by idotaccent;
language TAT;
sub i by idotaccent;
language TRK;
sub i by idotaccent;
language CRT;
sub i by idotaccent;
language AZE;
sub i by idotaccent;
} locl;

feature sups {
# automatic
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
} sups;

feature numr {
# automatic
sub one by one.numr;
sub three by three.numr;
} numr;

feature dnom {
# automatic
sub two by two.dnom;
sub four by four.dnom;
} dnom;

feature frac {
# automatic
sub one slash four by onequarter;
sub one slash two by onehalf;
sub three slash four by threequarters;
} frac;

feature ordn {
# automatic
sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
} ordn;

feature liga {
# automatic
sub f i by fi;
sub f l by fl;
} liga;

feature swsh {
# automatic
sub Q by Q.swsh;
sub R by R.swsh;
sub Racute by Racute.swsh;
sub Rcaron by Rcaron.swsh;
sub Rcommaaccent by Rcommaaccent.swsh;
sub ampersand by ampersand.swsh;
} swsh;

feature ss01 {
#t & f broken spine forms

sub f by f.alt;

sub t by t.alt;
sub tbar by tbar.alt;
sub tcaron by tcaron.alt;
sub tcedilla by tcedilla.alt;
sub tcommaaccent by tcommaaccent.alt;
} ss01;

feature ss02 {
# a & g single storey forms

sub a by a.alt2;
sub aacute by aacute.alt2;
sub abreve by abreve.alt2;
sub acircumflex by acircumflex.alt2;
sub adieresis by adieresis.alt2;
sub agrave by agrave.alt2;
sub amacron by amacron.alt2;
sub aogonek by aogonek.alt2;
sub aring by aring.alt2;
sub atilde by atilde.alt2;

sub g by g.alt;
sub gcommaaccent by gcommaaccent.alt;
sub gdotaccent by gdotaccent.alt;
sub gbreve by gbreve.alt;
} ss02;

feature ss03 {
# k x 7 2 flip diagonal/curved forms

sub k by k.alt;
sub kcommaaccent by kcommaaccent.alt;

sub x by x.alt;

sub seven by seven.alt;
sub two by two.alt;
} ss03;

feature ss04 {
#z curved to straight forms
sub z by z.alt;
sub zacute by zacute.alt;
sub zcaron by zcaron.alt;
sub zdotaccent by zdotaccent.alt;
sub G by G.alt;
sub Gdotaccent by Gdotaccent.alt;
sub Gbreve by Gbreve.alt;
sub Gcommaaccent by Gcommaaccent.alt;
} ss04;

feature ss05 {
sub a'n'g'r'y' by angry;
sub n'e'u't'r'a'l' by neutral;
sub h'a'p'p'y' by happy;
sub s'a'd' by sad;
sub s'u'r'p'r'i's'e'd'by surprised;
sub a'f'r'a'i'd' by afraid;
sub d'i's'g'u's't'e'd' by disgusted;

sub angry.rev by angry;
sub neutral.rev by neutral;
sub happy.rev by happy;
sub sad.rev by sad;
sub surprised.rev by surprised;
sub afraid.rev by afraid;
sub disgusted.rev by disgusted;
} ss05;

feature ss06 {
sub a'n'g'r'y' by angry.rev;
sub n'e'u't'r'a'l' by neutral.rev;
sub h'a'p'p'y' by happy.rev;
sub s'a'd' by sad.rev;
sub s'u'r'p'r'i's'e'd' by surprised.rev;
sub a'f'r'a'i'd' by afraid.rev;
sub d'i's'g'u's't'e'd' by disgusted.rev;

sub angry by angry.rev;
sub neutral by neutral.rev;
sub happy by happy.rev;
sub sad by sad.rev;
sub surprised by surprised.rev;
sub afraid by afraid.rev;
sub disgusted by disgusted.rev;
} ss06;

feature ss07 {
sub A by A.alt;
sub Aacute by Aacute.alt;
sub Abreve by Abreve.alt;
sub Acircumflex by Acircumflex.alt;
sub Acircumflexhookabove by Acircumflexhookabove.alt;
sub Adieresis by Adieresis.alt;
sub Agrave by Agrave.alt;
sub Amacron by Amacron.alt;
sub Aogonek by Aogonek.alt;
sub Aring by Aring.alt;
sub Atilde by Atilde.alt;
} ss07;

feature ss08 {
#alt exit strokes a, u, d

sub a by a.alt;
sub aacute by aacute.alt;
sub abreve by abreve.alt;
sub acircumflex by acircumflex.alt;
sub adieresis by adieresis.alt;
sub agrave by agrave.alt;
sub amacron by amacron.alt;
sub aogonek by aogonek.alt;
sub aring by aring.alt;
sub atilde by atilde.alt;
sub d by d.alt;
sub dcaron by dcaron.alt;
sub dcroat by dcroat.alt;
sub u by u.alt;
sub uacute by uacute.alt;
sub ucircumflex by ucircumflex.alt;
sub udieresis by udieresis.alt;
sub ugrave by ugrave.alt;
sub uhungarumlaut by uhungarumlaut.alt;
sub umacron by umacron.alt;
sub uogonek by uogonek.alt;
sub uring by uring.alt;
} ss08;

feature mgrk {
# automatic
sub Delta by increment;
sub Omega by Ohm;
sub mu by micro;
} mgrk;

feature zero {
sub zero by zero.slash;
} zero;

